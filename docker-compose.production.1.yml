version: '3.8'

services:
  survival-server:
    build:
      context: .
      dockerfile: ./prod/Dockerfiles/mindustry.Dockerfile
    ports:
      - "6567:6567/tcp"
      - "6567:6567/udp"
    volumes:
      - ./prod/maps/survival:/app/config/maps/
    networks:
      - toast
    env_file:
      - ./prod/.env.common
    environment:
      SERVER: Survival
      PORT: 6567
    healthcheck:
      test: [ 'CMD-SHELL', 'ss -ltu | grep $$PORT | wc -l | grep 2' ]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 1m
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      discovery-redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 400M
          cpus: '1'

  attack-server:
    build:
      context: .
      dockerfile: ./prod/Dockerfiles/mindustry.Dockerfile
    ports:
      - "6568:6568/tcp"
      - "6568:6568/udp"
    volumes:
      - ./prod/maps/attack:/app/config/maps/
    networks:
      - toast
    env_file:
      - ./prod/.env.common
    environment:
      SERVER: Attack
      PORT: 6568
    healthcheck:
      test: [ 'CMD-SHELL', 'ss -ltu | grep $$PORT | wc -l | grep 2' ]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 1m
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      discovery-redis:
        condition: service_healthy
      verify-discord-redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 400M
          cpus: '1'

  discord-bot:
    build:
      context: .
      dockerfile: ./prod/Dockerfiles/discord.Dockerfile
    networks:
      - toast
    env_file:
      - ./prod/.env.common
      - ./prod/.env.discord
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      discovery-redis:
        condition: service_healthy
      verify-discord-redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 400M
          cpus: '1'

  discovery-redis:
    image: redis:7.2.4-alpine
    entrypoint: [ "redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "$$REDIS_PASS" ]
    ports:
      - "6379:6379"
    env_file:
      - ./prod/.env.discovery-redis
    volumes:
      - ./prod/discovery-redis/redis.conf:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ 'CMD-SHELL', 'redis-cli -a $$REDIS_PASS ping | grep PONG' ]
    networks:
      - toast
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 40M
          cpus: '0.2'

  verify-discord-redis:
    image: redis:7.2.4-alpine
    entrypoint: [ "redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "$$REDIS_PASS" ]
    ports:
      - "6380:6379"
    env_file:
      - ./prod/.env.verify-discord-redis
    volumes:
      - ./prod/verify-discord-redis/redis.conf:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ 'CMD-SHELL', 'redis-cli -a $$REDIS_PASS ping | grep PONG' ]
    networks:
      - toast
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 40M
          cpus: '0.2'

  database:
    image: mariadb:lts
    env_file:
      - ./prod/.env.database
    volumes:
      - ./prod/mysql/my.cnf:/etc/mysql/my.cnf
      - data:/var/lib/mysql
    command: bash -c "chmod 644 /etc/mysql/*.cnf && /usr/local/bin/docker-entrypoint.sh mysqld"
    ports:
      - "3306:3306"
    healthcheck:
      test:
        [
          'CMD',
          '/usr/local/bin/healthcheck.sh',
          '--su-mysql',
          '--connect',
          '--innodb_initialized',
        ]
    networks:
      - toast
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 300M
          cpus: '1'

  rabbitmq:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./prod/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - rabbitmq-data:/var/lib/rabbitmq/mnesia/
    env_file:
      - ./prod/.env.rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q check_port_connectivity
    networks:
      - toast
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 300M
          cpus: '1'

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "8000:8000"
      - "9443:9443"
    volumes:
      - portainer-data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - toast
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 50M
          cpus: '0.5'

volumes:
  data:
  rabbitmq-data:
  portainer-data:

networks:
  toast: